name: Continuous Integration

on:
  push:
    branches:
      - main
    tags:
      - '*'

  pull_request:
    branches:
    - '*'

jobs:
  lint:
    runs-on: ubuntu-22.04
    container:
      image:
        ghcr.io/lifting-bits/patchestry-ubuntu-22.04-llvm-18-dev:latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Lint
      run: cmake -D FORMAT_COMMAND=clang-format-18 -P cmake/lint.cmake

    - name: Spell check
      run: cmake -P cmake/spell.cmake

  coverage:
    needs: [lint]

    runs-on: ubuntu-22.04
    if: github.repository_owner == 'lifting-bits'
    container:
      image:
        ghcr.io/lifting-bits/patchestry-ubuntu-22.04-llvm-18-dev:latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake --preset=ci-coverage

    - name: Build
      run: cmake --build build/coverage -j $(nproc)

    - name: Test
      working-directory: build/coverage
      run: ctest --output-on-failure --no-tests=error -j $(nproc)

    - name: Process coverage info
      run: cmake --build build/coverage -t coverage

    - name: Submit to codecov.io
      uses: codecov/codecov-action@v4
      with:
        file: build/coverage/coverage.info

  sanitize:
    needs: [lint]

    runs-on: ubuntu-22.04
    container:
      image:
        ghcr.io/lifting-bits/patchestry-ubuntu-22.04-llvm-18-dev:latest

    env: { CXX: clang++-18 }

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake --preset=ci-sanitize

    - name: Build
      run: cmake --build build/sanitize -j $(nproc)

    - name: Test
      working-directory: build/sanitize
      env:
        ASAN_OPTIONS: "strict_string_checks=1:\
          detect_stack_use_after_return=1:\
          check_initialization_order=1:\
          strict_init_order=1:\
          detect_leaks=1"
        UBSAN_OPTIONS: print_stacktrace=1
      run: ctest --output-on-failure --no-tests=error -j $(nproc)

  test:
    needs: [lint]

    runs-on: ubuntu-22.04
    container:
      image:
        ghcr.io/lifting-bits/patchestry-ubuntu-22.04-llvm-18-dev:latest

    steps:
    - uses: actions/checkout@v4

    - name: Configure
      run: cmake --preset=ci-ubuntu

    - name: Build
      run: cmake --build build --config Release -j $(nproc)

    - name: Install
      run: cmake --install build --config Release --prefix prefix

    - name: Test
      working-directory: build
      run: ctest --output-on-failure --no-tests=error -C Release -j $(nproc)

  docs:
    # Deploy docs only when builds succeed
    needs: [sanitize, test]

    runs-on: ubuntu-22.04
    if: github.ref == 'refs/heads/main'
      && github.event_name == 'push'
      && github.repository_owner == 'lifting-bits'

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with: { python-version: "3.12" }

    - name: Build docs
      run: cmake "-DPROJECT_SOURCE_DIR=$PWD" "-DPROJECT_BINARY_DIR=$PWD/build"
        -P cmake/docs-ci.cmake

    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/docs/html
